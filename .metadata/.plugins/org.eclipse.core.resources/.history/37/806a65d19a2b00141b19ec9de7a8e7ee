/*
 * GameManager.cpp
 *
 *  Created on: Aug 23, 2014
 *      Author: enzo
 */

#include <stdio.h>
#include "include/GameManager.hpp"
#include "include/states/GameState.hpp"

GameManager::GameManager()
	: states_(),
	  running_(false),
	  display_(NULL) {

}

GameManager::~GameManager() {

}

int GameManager::Init() {
	// init allegro
	if(!al_init()) {
	   fprintf(stderr, "failed to initialize allegro!\n");
	   return -1;
	}

	display_ = al_create_display(640, 480);
	if(!display_) {
	   fprintf(stderr, "failed to create display!\n");
	   return -1;
	}

	al_clear_to_color(al_map_rgb(0,0,0));
	al_flip_display();
	al_rest(0.1);

	return 0;
}

void GameManager::Finish() {
	al_destroy_display(display_);
}

void GameManager::Start() {

}

void GameManager::Stop() {

}

bool GameManager::isRunning() {
	return running_;
}

void GameManager::HandleEvents() {
	states_.back()->HandleEvents(this);
}

void GameManager::Update() {
	states_.back()->Update(this);
}

void GameManager::Draw() {
	states_.back()->Draw(this);
}

void GameManager::ChangeState(GameState *state) {

}

void GameManager::PushState(GameState *state) {

}

void GameManager::PopState() {
	// finish current state
	if (!states_.empty()) {
		states_.back()->Finish();
		states_.pop_back();
	}

	// resume previous state
	if (!states_.empty()) {
		states_.back()->Resume();
	}
}
